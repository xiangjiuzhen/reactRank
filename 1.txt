      interceptors: [],
      _call: [Function: CALL_DELEGATE],
      call: [Function: anonymous],
      _callAsync: [Function: CALL_ASYNC_DELEGATE],
      callAsync: [Function: CALL_ASYNC_DELEGATE],
      _promise: [Function: PROMISE_DELEGATE],
      promise: [Function: PROMISE_DELEGATE],
      _x: [],
      compile: [Function: COMPILE],
      tap: [Function: tap],
      tapAsync: [Function: TAP_ASYNC],
      tapPromise: [Function: TAP_PROMISE],
      constructor: [Function: SyncHook]
    },
    afterResolvers: Hook {
      _args: [Array],
      name: undefined,
      taps: [],
      interceptors: [],
      _call: [Function: CALL_DELEGATE],
      call: [Function: anonymous],
      _callAsync: [Function: CALL_ASYNC_DELEGATE],
      callAsync: [Function: CALL_ASYNC_DELEGATE],
      _promise: [Function: PROMISE_DELEGATE],
      promise: [Function: PROMISE_DELEGATE],
      _x: [],
      compile: [Function: COMPILE],
      tap: [Function: tap],
      tapAsync: [Function: TAP_ASYNC],
      tapPromise: [Function: TAP_PROMISE],
      constructor: [Function: SyncHook]
    },
    entryOption: Hook {
      _args: [Array],
      name: undefined,
      taps: [Array],
      interceptors: [],
      _call: [Function: CALL_DELEGATE],
      call: [Function: anonymous],
      _callAsync: [Function: CALL_ASYNC_DELEGATE],
      callAsync: [Function: CALL_ASYNC_DELEGATE],
      _promise: [Function: PROMISE_DELEGATE],
      promise: [Function: PROMISE_DELEGATE],
      _x: [Array],
      compile: [Function: COMPILE],
      tap: [Function: tap],
      tapAsync: [Function: TAP_ASYNC],
      tapPromise: [Function: TAP_PROMISE],
      constructor: [Function: SyncBailHook]
    }
  },
  webpack: [Function: f] {
    webpack: [Getter],
    validate: [Getter],
    validateSchema: [Getter],
    version: [Getter],
    cli: [Getter],
    AutomaticPrefetchPlugin: [Getter],
    AsyncDependenciesBlock: [Getter],
    BannerPlugin: [Getter],
    Cache: [Getter],
    Chunk: [Getter],
    ChunkGraph: [Getter],
    CleanPlugin: [Getter],
    Compilation: [Getter],
    Compiler: [Getter],
    ConcatenationScope: [Getter],
    ContextExclusionPlugin: [Getter],
    ContextReplacementPlugin: [Getter],
    DefinePlugin: [Getter],
    DelegatedPlugin: [Getter],
    Dependency: [Getter],
    DllPlugin: [Getter],
    DllReferencePlugin: [Getter],
    DynamicEntryPlugin: [Getter],
    EntryOptionPlugin: [Getter],
    EntryPlugin: [Getter],
    EnvironmentPlugin: [Getter],
    EvalDevToolModulePlugin: [Getter],
    EvalSourceMapDevToolPlugin: [Getter],
    ExternalModule: [Getter],
    ExternalsPlugin: [Getter],
    Generator: [Getter],
    HotUpdateChunk: [Getter],
    HotModuleReplacementPlugin: [Getter],
    IgnorePlugin: [Getter],
    JavascriptModulesPlugin: [Getter],
    LibManifestPlugin: [Getter],
    LibraryTemplatePlugin: [Getter],
    LoaderOptionsPlugin: [Getter],
    LoaderTargetPlugin: [Getter],
    Module: [Getter],
    ModuleFilenameHelpers: [Getter],
    ModuleGraph: [Getter],
    ModuleGraphConnection: [Getter],
    NoEmitOnErrorsPlugin: [Getter],
    NormalModule: [Getter],
    NormalModuleReplacementPlugin: [Getter],
    MultiCompiler: [Getter],
    OptimizationStages: [Getter],
    Parser: [Getter],
    PrefetchPlugin: [Getter],
    ProgressPlugin: [Getter],
    ProvidePlugin: [Getter],
    RuntimeGlobals: [Getter],
    RuntimeModule: [Getter],
    SingleEntryPlugin: [Getter],
    SourceMapDevToolPlugin: [Getter],
    Stats: [Getter],
    Template: [Getter],
    UsageState: [Getter],
    WatchIgnorePlugin: [Getter],
    WebpackError: [Getter],
    WebpackOptionsApply: [Getter],
    WebpackOptionsDefaulter: [Getter],
    WebpackOptionsValidationError: [Getter],
    ValidationError: [Getter],
    cache: { MemoryCachePlugin: [Getter] },
    config: {
      getNormalizedWebpackOptions: [Getter],
      applyWebpackOptionsDefaults: [Getter]
    },
    dependencies: {
      ModuleDependency: [Getter],
      HarmonyImportDependency: [Getter],
      ConstDependency: [Getter],
      NullDependency: [Getter]
    },
    ids: {
      ChunkModuleIdRangePlugin: [Getter],
      NaturalModuleIdsPlugin: [Getter],
      OccurrenceModuleIdsPlugin: [Getter],
      NamedModuleIdsPlugin: [Getter],
      DeterministicChunkIdsPlugin: [Getter],
      DeterministicModuleIdsPlugin: [Getter],
      NamedChunkIdsPlugin: [Getter],
      OccurrenceChunkIdsPlugin: [Getter],
      HashedModuleIdsPlugin: [Getter]
    },
    javascript: {
      EnableChunkLoadingPlugin: [Getter],
      JavascriptModulesPlugin: [Getter],
      JavascriptParser: [Getter]
    },
    optimize: {
      AggressiveMergingPlugin: [Getter],
      AggressiveSplittingPlugin: [Getter],
      InnerGraph: [Getter],
      LimitChunkCountPlugin: [Getter],
      MinChunkSizePlugin: [Getter],
      ModuleConcatenationPlugin: [Getter],
      RealContentHashPlugin: [Getter],
      RuntimeChunkPlugin: [Getter],
      SideEffectsFlagPlugin: [Getter],
      SplitChunksPlugin: [Getter]
    },
    runtime: {
      GetChunkFilenameRuntimeModule: [Getter],
      LoadScriptRuntimeModule: [Getter]
    },
    prefetch: { ChunkPrefetchPreloadPlugin: [Getter] },
    web: {
      FetchCompileAsyncWasmPlugin: [Getter],
      FetchCompileWasmPlugin: [Getter],
      JsonpChunkLoadingRuntimeModule: [Getter],
      JsonpTemplatePlugin: [Getter]
    },
    webworker: { WebWorkerTemplatePlugin: [Getter] },
    node: {
      NodeEnvironmentPlugin: [Getter],
      NodeSourcePlugin: [Getter],
      NodeTargetPlugin: [Getter],
      NodeTemplatePlugin: [Getter],
      ReadFileCompileWasmPlugin: [Getter]
    },
    electron: { ElectronTargetPlugin: [Getter] },
    wasm: {
      AsyncWebAssemblyModulesPlugin: [Getter],
      EnableWasmLoadingPlugin: [Getter]
    },
    library: { AbstractLibraryPlugin: [Getter], EnableLibraryPlugin: [Getter] },
    container: {
      ContainerPlugin: [Getter],
      ContainerReferencePlugin: [Getter],
      ModuleFederationPlugin: [Getter],
      scope: [Getter]
    },
    sharing: {
      ConsumeSharedPlugin: [Getter],
      ProvideSharedPlugin: [Getter],
      SharePlugin: [Getter],
      scope: [Getter]
    },
    debug: { ProfilingPlugin: [Getter] },
    util: {
      createHash: [Getter],
      comparators: [Getter],
      runtime: [Getter],
      serialization: [Getter],
      cleverMerge: [Getter],
      LazySet: [Getter]
    },
    sources: [Getter],
    experiments: { schemes: [Object], ids: [Object] }
  },
  name: undefined,
  parentCompilation: undefined,
  root: [Circular *1],
  outputPath: 'C:\\Users\\Alienware\\Desktop\\webpack\\dist',
  watching: undefined,
  outputFileSystem: {
    appendFile: [Function: appendFile],
    appendFileSync: [Function: appendFileSync],
    access: [Function: access],
    accessSync: [Function: accessSync],
    chown: [Function (anonymous)],
    chownSync: [Function (anonymous)],
    chmod: [Function (anonymous)],
    chmodSync: [Function (anonymous)],
    close: [Function: close],
    closeSync: [Function: closeSync],
    copyFile: [Function: copyFile],
    copyFileSync: [Function: copyFileSync],
    cp: [Function: cp],
    cpSync: [Function: cpSync],
    createReadStream: [Function: createReadStream],
    createWriteStream: [Function: createWriteStream],
    exists: [Function: exists],
    existsSync: [Function: existsSync],
    fchown: [Function (anonymous)],
    fchownSync: [Function (anonymous)],
    fchmod: [Function (anonymous)],
    fchmodSync: [Function (anonymous)],
    fdatasync: [Function: fdatasync],
    fdatasyncSync: [Function: fdatasyncSync],
    fstat: [Function (anonymous)],
    fstatSync: [Function (anonymous)],
    fsync: [Function: fsync],
    fsyncSync: [Function: fsyncSync],
    ftruncate: [Function: ftruncate],
    ftruncateSync: [Function: ftruncateSync],
    futimes: [Function: futimes],
    futimesSync: [Function: futimesSync],
    lchown: [Function (anonymous)],
    lchownSync: [Function (anonymous)],
    lchmod: [Function (anonymous)],
    lchmodSync: [Function (anonymous)],
    link: [Function: link],
    linkSync: [Function: linkSync],
    lstat: [Function (anonymous)],
    lstatSync: [Function (anonymous)],
    lutimes: [Function: lutimes],
    lutimesSync: [Function: lutimesSync],
    mkdir: [Function: mkdir],
    mkdirSync: [Function: mkdirSync],
    mkdtemp: [Function: mkdtemp],
    mkdtempSync: [Function: mkdtempSync],
    open: [Function: open],
    openSync: [Function: openSync],
    opendir: [Function: opendir],
    opendirSync: [Function: opendirSync],
    readdir: [Function: readdir],
    readdirSync: [Function: readdirSync],
    read: [Function: read],
    readSync: [Function (anonymous)],
    readv: [Function: readv],
    readvSync: [Function: readvSync],
    readFile: [Function: readFile],
    readFileSync: [Function: readFileSync],
    readlink: [Function: readlink],
    readlinkSync: [Function: readlinkSync],
    realpath: [Function: realpath] { native: [Function (anonymous)] },
    realpathSync: [Function: realpathSync] { native: [Function (anonymous)] },
    rename: [Function: rename],
    renameSync: [Function: renameSync],
    rm: [Function: rm],
    rmSync: [Function: rmSync],
    rmdir: [Function: rmdir],
    rmdirSync: [Function: rmdirSync],
    stat: [Function (anonymous)],
    statfs: [Function: statfs],
    statSync: [Function (anonymous)],
    statfsSync: [Function: statfsSync],
    symlink: [Function: symlink],
    symlinkSync: [Function: symlinkSync],
    truncate: [Function: truncate],
    truncateSync: [Function: truncateSync],
    unwatchFile: [Function: unwatchFile],
    unlink: [Function: unlink],
    unlinkSync: [Function: unlinkSync],
    utimes: [Function: utimes],
    utimesSync: [Function: utimesSync],
    watch: [Function: watch],
    watchFile: [Function: watchFile],
    writeFile: [Function: writeFile],
    writeFileSync: [Function: writeFileSync],
    write: [Function: write],
    writeSync: [Function: writeSync],
    writev: [Function: writev],
    writevSync: [Function: writevSync],
    Dir: [class Dir],
    Dirent: [class Dirent],
    Stats: [Function: Stats],
    ReadStream: [Getter/Setter],
    WriteStream: [Getter/Setter],
    FileReadStream: [Getter/Setter],
    FileWriteStream: [Getter/Setter],
    _toUnixTimestamp: [Function: toUnixTimestamp],
    F_OK: 0,
    R_OK: 4,
    W_OK: 2,
    X_OK: 1,
    constants: [Object: null prototype] {
      UV_FS_SYMLINK_DIR: 1,
      UV_FS_SYMLINK_JUNCTION: 2,
      O_RDONLY: 0,
      O_WRONLY: 1,
      O_RDWR: 2,
      UV_DIRENT_UNKNOWN: 0,
      UV_DIRENT_FILE: 1,
      UV_DIRENT_DIR: 2,
      UV_DIRENT_LINK: 3,
      UV_DIRENT_FIFO: 4,
      UV_DIRENT_SOCKET: 5,
      UV_DIRENT_CHAR: 6,
      UV_DIRENT_BLOCK: 7,
      S_IFMT: 61440,
      S_IFREG: 32768,
      S_IFDIR: 16384,
      S_IFCHR: 8192,
      S_IFIFO: 4096,
      S_IFLNK: 40960,
      O_CREAT: 256,
      O_EXCL: 1024,
      UV_FS_O_FILEMAP: 536870912,
      O_TRUNC: 512,
      O_APPEND: 8,
      S_IRUSR: 256,
      S_IWUSR: 128,
      F_OK: 0,
      R_OK: 4,
      W_OK: 2,
      X_OK: 1,
      UV_FS_COPYFILE_EXCL: 1,
      COPYFILE_EXCL: 1,
      UV_FS_COPYFILE_FICLONE: 2,
      COPYFILE_FICLONE: 2,
      UV_FS_COPYFILE_FICLONE_FORCE: 4,
      COPYFILE_FICLONE_FORCE: 4
    },
    promises: [Getter],
    gracefulify: [Function: patch]
  },
  intermediateFileSystem: {
    appendFile: [Function: appendFile],
    appendFileSync: [Function: appendFileSync],
    access: [Function: access],
    accessSync: [Function: accessSync],
    chown: [Function (anonymous)],
    chownSync: [Function (anonymous)],
    chmod: [Function (anonymous)],
    chmodSync: [Function (anonymous)],
    close: [Function: close],
    closeSync: [Function: closeSync],
    copyFile: [Function: copyFile],
    copyFileSync: [Function: copyFileSync],
    cp: [Function: cp],
    cpSync: [Function: cpSync],
    createReadStream: [Function: createReadStream],
    createWriteStream: [Function: createWriteStream],
    exists: [Function: exists],
    existsSync: [Function: existsSync],
    fchown: [Function (anonymous)],
    fchownSync: [Function (anonymous)],
    fchmod: [Function (anonymous)],
    fchmodSync: [Function (anonymous)],
    fdatasync: [Function: fdatasync],
    fdatasyncSync: [Function: fdatasyncSync],
    fstat: [Function (anonymous)],
    fstatSync: [Function (anonymous)],
    fsync: [Function: fsync],
    fsyncSync: [Function: fsyncSync],
    ftruncate: [Function: ftruncate],
    ftruncateSync: [Function: ftruncateSync],
    futimes: [Function: futimes],
    futimesSync: [Function: futimesSync],
    lchown: [Function (anonymous)],
    lchownSync: [Function (anonymous)],
    lchmod: [Function (anonymous)],
    lchmodSync: [Function (anonymous)],
    link: [Function: link],
    linkSync: [Function: linkSync],
    lstat: [Function (anonymous)],
    lstatSync: [Function (anonymous)],
    lutimes: [Function: lutimes],
    lutimesSync: [Function: lutimesSync],
    mkdir: [Function: mkdir],
    mkdirSync: [Function: mkdirSync],
    mkdtemp: [Function: mkdtemp],
    mkdtempSync: [Function: mkdtempSync],
    open: [Function: open],
    openSync: [Function: openSync],
    opendir: [Function: opendir],
    opendirSync: [Function: opendirSync],
    readdir: [Function: readdir],
    readdirSync: [Function: readdirSync],
    read: [Function: read],
    readSync: [Function (anonymous)],
    readv: [Function: readv],
    readvSync: [Function: readvSync],
    readFile: [Function: readFile],
    readFileSync: [Function: readFileSync],
    readlink: [Function: readlink],
    readlinkSync: [Function: readlinkSync],
    realpath: [Function: realpath] { native: [Function (anonymous)] },
    realpathSync: [Function: realpathSync] { native: [Function (anonymous)] },
    rename: [Function: rename],
    renameSync: [Function: renameSync],
    rm: [Function: rm],
    rmSync: [Function: rmSync],
    rmdir: [Function: rmdir],
    rmdirSync: [Function: rmdirSync],
    stat: [Function (anonymous)],
    statfs: [Function: statfs],
    statSync: [Function (anonymous)],
    statfsSync: [Function: statfsSync],
    symlink: [Function: symlink],
    symlinkSync: [Function: symlinkSync],
    truncate: [Function: truncate],
    truncateSync: [Function: truncateSync],
    unwatchFile: [Function: unwatchFile],
    unlink: [Function: unlink],
    unlinkSync: [Function: unlinkSync],
    utimes: [Function: utimes],
    utimesSync: [Function: utimesSync],
    watch: [Function: watch],
    watchFile: [Function: watchFile],
    writeFile: [Function: writeFile],
    writeFileSync: [Function: writeFileSync],
    write: [Function: write],
    writeSync: [Function: writeSync],
    writev: [Function: writev],
    writevSync: [Function: writevSync],
    Dir: [class Dir],
    Dirent: [class Dirent],
    Stats: [Function: Stats],
    ReadStream: [Getter/Setter],
    WriteStream: [Getter/Setter],
    FileReadStream: [Getter/Setter],
    FileWriteStream: [Getter/Setter],
    _toUnixTimestamp: [Function: toUnixTimestamp],
    F_OK: 0,
    R_OK: 4,
    W_OK: 2,
    X_OK: 1,
    constants: [Object: null prototype] {
      UV_FS_SYMLINK_DIR: 1,
      UV_FS_SYMLINK_JUNCTION: 2,
      O_RDONLY: 0,
      O_WRONLY: 1,
      O_RDWR: 2,
      UV_DIRENT_UNKNOWN: 0,
      UV_DIRENT_FILE: 1,
      UV_DIRENT_DIR: 2,
      UV_DIRENT_LINK: 3,
      UV_DIRENT_FIFO: 4,
      UV_DIRENT_SOCKET: 5,
      UV_DIRENT_CHAR: 6,
      UV_DIRENT_BLOCK: 7,
      S_IFMT: 61440,
      S_IFREG: 32768,
      S_IFDIR: 16384,
      S_IFCHR: 8192,
      S_IFIFO: 4096,
      S_IFLNK: 40960,
      O_CREAT: 256,
      O_EXCL: 1024,
      UV_FS_O_FILEMAP: 536870912,
      O_TRUNC: 512,
      O_APPEND: 8,
      S_IRUSR: 256,
      S_IWUSR: 128,
      F_OK: 0,
      R_OK: 4,
      W_OK: 2,
      X_OK: 1,
      UV_FS_COPYFILE_EXCL: 1,
      COPYFILE_EXCL: 1,
      UV_FS_COPYFILE_FICLONE: 2,
      COPYFILE_FICLONE: 2,
      UV_FS_COPYFILE_FICLONE_FORCE: 4,
      COPYFILE_FICLONE_FORCE: 4
    },
    promises: [Getter],
    gracefulify: [Function: patch]
  },
  inputFileSystem: CachedInputFileSystem {
    fileSystem: {
      appendFile: [Function: appendFile],
      appendFileSync: [Function: appendFileSync],
      access: [Function: access],
      accessSync: [Function: accessSync],
      chown: [Function (anonymous)],
      chownSync: [Function (anonymous)],
      chmod: [Function (anonymous)],
      chmodSync: [Function (anonymous)],
      close: [Function: close],
      closeSync: [Function: closeSync],
      copyFile: [Function: copyFile],
      copyFileSync: [Function: copyFileSync],
      cp: [Function: cp],
      cpSync: [Function: cpSync],
      createReadStream: [Function: createReadStream],
      createWriteStream: [Function: createWriteStream],
      exists: [Function: exists],
      existsSync: [Function: existsSync],
      fchown: [Function (anonymous)],
      fchownSync: [Function (anonymous)],
      fchmod: [Function (anonymous)],
      fchmodSync: [Function (anonymous)],
      fdatasync: [Function: fdatasync],
      fdatasyncSync: [Function: fdatasyncSync],
      fstat: [Function (anonymous)],
      fstatSync: [Function (anonymous)],
      fsync: [Function: fsync],
      fsyncSync: [Function: fsyncSync],
      ftruncate: [Function: ftruncate],
      ftruncateSync: [Function: ftruncateSync],
      futimes: [Function: futimes],
      futimesSync: [Function: futimesSync],
      lchown: [Function (anonymous)],
      lchownSync: [Function (anonymous)],
      lchmod: [Function (anonymous)],
      lchmodSync: [Function (anonymous)],
      link: [Function: link],
      linkSync: [Function: linkSync],
      lstat: [Function (anonymous)],
      lstatSync: [Function (anonymous)],
      lutimes: [Function: lutimes],
      lutimesSync: [Function: lutimesSync],
      mkdir: [Function: mkdir],
      mkdirSync: [Function: mkdirSync],
      mkdtemp: [Function: mkdtemp],
      mkdtempSync: [Function: mkdtempSync],
      open: [Function: open],
      openSync: [Function: openSync],
      opendir: [Function: opendir],
      opendirSync: [Function: opendirSync],
      readdir: [Function: readdir],
      readdirSync: [Function: readdirSync],
      read: [Function: read],
      readSync: [Function (anonymous)],
      readv: [Function: readv],
      readvSync: [Function: readvSync],
      readFile: [Function: readFile],
      readFileSync: [Function: readFileSync],
      readlink: [Function: readlink],
      readlinkSync: [Function: readlinkSync],
      realpath: [Function],
      realpathSync: [Function],
      rename: [Function: rename],
      renameSync: [Function: renameSync],
      rm: [Function: rm],
      rmSync: [Function: rmSync],
      rmdir: [Function: rmdir],
      rmdirSync: [Function: rmdirSync],
      stat: [Function (anonymous)],
      statfs: [Function: statfs],
      statSync: [Function (anonymous)],
      statfsSync: [Function: statfsSync],
      symlink: [Function: symlink],
      symlinkSync: [Function: symlinkSync],
      truncate: [Function: truncate],
      truncateSync: [Function: truncateSync],
      unwatchFile: [Function: unwatchFile],
      unlink: [Function: unlink],
      unlinkSync: [Function: unlinkSync],
      utimes: [Function: utimes],
      utimesSync: [Function: utimesSync],
      watch: [Function: watch],
      watchFile: [Function: watchFile],
      writeFile: [Function: writeFile],
      writeFileSync: [Function: writeFileSync],
      write: [Function: write],
      writeSync: [Function: writeSync],
      writev: [Function: writev],
      writevSync: [Function: writevSync],
      Dir: [class Dir],
      Dirent: [class Dirent],
      Stats: [Function: Stats],
      ReadStream: [Getter/Setter],
      WriteStream: [Getter/Setter],
      FileReadStream: [Getter/Setter],
      FileWriteStream: [Getter/Setter],
      _toUnixTimestamp: [Function: toUnixTimestamp],
      F_OK: 0,
      R_OK: 4,
      W_OK: 2,
      X_OK: 1,
      constants: [Object: null prototype],
      promises: [Getter],
      gracefulify: [Function: patch]
    },
    _lstatBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function (anonymous)],
      _syncProvider: [Function (anonymous)],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    lstat: [Function: bound provide],
    lstatSync: [Function: bound provideSync],
    _statBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function (anonymous)],
      _syncProvider: [Function (anonymous)],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    stat: [Function: bound provide],
    statSync: [Function: bound provideSync],
    _readdirBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function: readdir],
      _syncProvider: [Function: readdirSync],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    readdir: [Function: bound provide],
    readdirSync: [Function: bound provideSync],
    _readFileBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function: readFile],
      _syncProvider: [Function: readFileSync],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    readFile: [Function: bound provide],
    readFileSync: [Function: bound provideSync],
    _readJsonBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function (anonymous)],
      _syncProvider: [Function (anonymous)],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    readJson: [Function: bound provide],
    readJsonSync: [Function: bound provideSync],
    _readlinkBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function: readlink],
      _syncProvider: [Function: readlinkSync],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    readlink: [Function: bound provide],
    readlinkSync: [Function: bound provideSync],
    _realpathBackend: CacheBackend {
      _duration: 60000,
      _provider: [Function],
      _syncProvider: [Function],
      _providerContext: [Object],
      _activeAsyncOperations: Map(0) {},
      _data: Map(0) {},
      _levels: [Array],
      _currentLevel: 0,
      _tickInterval: 500,
      _mode: 0,
      _timeout: undefined,
      _nextDecay: undefined,
      provide: [Function: bound provide],
      provideSync: [Function: bound provideSync]
    },
    realpath: [Function: bound provide],
    realpathSync: [Function: bound provideSync]
  },
  watchFileSystem: NodeWatchFileSystem {
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync],
      _realpathBackend: [CacheBackend],
      realpath: [Function: bound provide],
      realpathSync: [Function: bound provideSync]
    },
    watcherOptions: { aggregateTimeout: 0 },
    watcher: Watchpack {
      _events: [Object: null prototype] {},
      _eventsCount: 0,
      _maxListeners: undefined,
      options: [Object],
      aggregateTimeout: 0,
      watcherOptions: [Object],
      watcherManager: [WatcherManager],
      fileWatchers: Map(0) {},
      directoryWatchers: Map(0) {},
      _missing: Set(0) {},
      startTime: undefined,
      paused: false,
      aggregatedChanges: Set(0) {},
      aggregatedRemovals: Set(0) {},
      aggregateTimer: undefined,
      _onTimeout: [Function: bound _onTimeout],
      [Symbol(kCapture)]: false
    }
  },
  recordsInputPath: null,
  recordsOutputPath: null,
  records: {},
  managedPaths: Set(1) { 'C:\\Users\\Alienware\\Desktop\\webpack\\node_modules\\' },
  unmanagedPaths: Set(0) {},
  immutablePaths: Set(0) {},
  modifiedFiles: undefined,
  removedFiles: undefined,
  fileTimestamps: undefined,
  contextTimestamps: undefined,
  fsStartTime: 1729342397168,
  resolverFactory: ResolverFactory {
    hooks: { resolveOptions: [HookMap], resolver: [HookMap] },
    cache: Map(0) {}
  },
  infrastructureLogger: [Function: logger],
  options: {
    amd: undefined,
    bail: undefined,
    cache: false,
    context: 'C:\\Users\\Alienware\\Desktop\\webpack',
    dependencies: undefined,
    devServer: undefined,
    devtool: false,
    entry: { main: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false,
      css: undefined,
      topLevelAwait: true
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web', environment: [Object] },
    mode: 'production',
    module: {
      noParse: undefined,
      unsafeCache: false,
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: false,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: true,
      moduleIds: 'deterministic',
      chunkIds: 'deterministic',
      sideEffects: true,
      providedExports: true,
      usedExports: true,
      innerGraph: true,
      mangleExports: true,
      concatenateModules: true,
      checkWasmTypes: true,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: true,
      minimize: true,
      minimizer: [Array],
      nodeEnv: 'production'
    },
    output: {
      assetModuleFilename: '[hash][ext][query]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[id].main.js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunkwebpack',
      chunkLoadTimeout: 120000,
      cssFilename: 'js/main.css',
      cssChunkFilename: 'js/[id].main.css',
      cssHeadDataCompression: true,
      clean: true,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: 'webpack',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/main.js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdatewebpack',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      ignoreBrowserWarnings: undefined,
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: 'C:\\Users\\Alienware\\Desktop\\webpack\\dist',
      pathinfo: false,
      publicPath: '/assets/',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleErrorHandling: false,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: 'webpack',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerPublicPath: '',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch'
    },
    parallelism: 100,
    performance: {
      maxAssetSize: 250000,
      maxEntrypointSize: 250000,
      hints: 'warning'
    },
    plugins: [ [CLIPlugin], [HTMLPlugin] ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: false,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: false,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array],
      unmanagedPaths: []
    },
    stats: { preset: 'normal', colors: true },
    target: 'web',
    watch: false,
    watchOptions: {}
  },
  context: 'C:\\Users\\Alienware\\Desktop\\webpack',
  requestShortener: RequestShortener { contextify: [Function: boundFn] },
  cache: Cache {
    hooks: {
      get: [Hook],
      store: [Hook],
      storeBuildDependencies: [Hook],
      beginIdle: [Hook],
      endIdle: [Hook],
      shutdown: [Hook]
    }
  },
  moduleMemCaches: undefined,
  compilerPath: '',
  running: true,
  idle: false,
  watchMode: false,
  _backCompat: true,
  _lastCompilation: undefined,
  _lastNormalModuleFactory: undefined,
  _assetEmittingSourceCache: WeakMap { <items unknown> },
  _assetEmittingWrittenFiles: Map(0) {},
  _assetEmittingPreviousFiles: Set(0) {}
}